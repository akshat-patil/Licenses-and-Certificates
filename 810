using System;
using System.Configuration;
using System.Data;
using System.Data.SqlClient;
using System.Web.UI;
using System.Web.UI.WebControls;

public partial class csscrapnotes : System.Web.UI.Page
{
    protected void Page_Load(object sender, EventArgs e)
    {
        if (!IsPostBack)
        {
            bindGrid();
            lblMessage.Text = "";
        }
    }

    protected void bindGrid()
    {
        try
        {
            using (SqlConnection con = new SqlConnection(ConfigurationManager.ConnectionStrings["SiteSqlServer"].ToString()))
            {
                con.Open();
                SqlCommand cmd = new SqlCommand("SELECT * FROM tblScrapNote WHERE addedBy = '" + Session["uid"].ToString() + "' ORDER BY sid DESC", con);
                SqlDataAdapter da = new SqlDataAdapter(cmd);
                DataTable dt = new DataTable();
                da.Fill(dt);

                grd.DataSource = dt;
                grd.DataBind();
            }
        }
        catch (Exception ex)
        {
            lblMessage.ForeColor = System.Drawing.Color.Red;
            lblMessage.Text = "Error loading data: " + ex.Message;
        }
    }

    protected void grd_PageIndexChanging(object sender, GridViewPageEventArgs e)
    {
        grd.PageIndex = e.NewPageIndex;
        bindGrid();
    }

    protected void cmdSearch_Click(object sender, EventArgs e)
    {
        bindGrid();
    }

    protected void cmdReset_Click(object sender, EventArgs e)
    {
        bindGrid();
        lblMessage.Text = "";
    }

    // ✅ Main Submit Logic implementing Business Rules
    protected void btnSubmit_Click(object sender, EventArgs e)
    {
        lblMessage.Text = "";
        SqlTransaction tran = null;

        try
        {
            using (SqlConnection con = new SqlConnection(ConfigurationManager.ConnectionStrings["SiteSqlServer"].ToString()))
            {
                con.Open();
                tran = con.BeginTransaction();

                // 1️⃣ Get total Scrap Stock Value (sum of all item rows for this scrap note)
                decimal totalValueINR = 0;
                decimal totalValueEUR = 0;
                decimal conversionRate = 90; // adjust based on your actual conversion

                string sqlTotal = "SELECT SUM(ScrapStockValue) FROM tblScrapNoteTrans WHERE sid = " + hdnsid.Value;
                SqlCommand cmdTotal = new SqlCommand(sqlTotal, con, tran);
                var result = cmdTotal.ExecuteScalar();
                if (result != DBNull.Value && result != null)
                    totalValueINR = Convert.ToDecimal(result);

                // 2️⃣ Convert INR → EUR
                totalValueEUR = totalValueINR / conversionRate;

                // 3️⃣ Apply business rules (Authorization Matrix)
                int nextStatus = 0;
                string nextStatusText = "";

                if (totalValueEUR < 1000)
                {
                    nextStatus = 7; // BA/BU
                    nextStatusText = "Pending at BA/BU";
                }
                else if (totalValueEUR >= 1000 && totalValueEUR < 5000)
                {
                    nextStatus = 6; // Warehouse
                    nextStatusText = "Pending at Warehouse";
                }
                else if (totalValueEUR >= 5000 && totalValueEUR < 20000)
                {
                    nextStatus = 2; // Controlling
                    nextStatusText = "Pending at Controlling";
                }
                else if (totalValueEUR >= 20000 && totalValueEUR < 50000)
                {
                    nextStatus = 2; // Controlling
                    nextStatusText = "Pending at Controlling";
                }
                else if (totalValueEUR >= 50000)
                {
                    nextStatus = 2; // Controlling (and full flow)
                    nextStatusText = "Pending at Controlling";
                }

                // 4️⃣ Update Scrap Note with next status
                string sqlUpdate = "UPDATE tblScrapNote SET status = " + nextStatus + ", statusText = '" + nextStatusText + "' WHERE sid = " + hdnsid.Value;
                SqlCommand cmdUpdate = new SqlCommand(sqlUpdate, con, tran);
                cmdUpdate.ExecuteNonQuery();

                // 5️⃣ Insert flow record into tblFlow
                string sqlInsert = "INSERT INTO tblFlow (sid, addedBy, status, statusText, csComment) VALUES (" +
                                   hdnsid.Value + ", '" + Session["uid"].ToString() + "', " +
                                   nextStatus + ", '" + nextStatusText + "', 'Scrap note submitted by CS')";
                SqlCommand cmdInsert = new SqlCommand(sqlInsert, con, tran);
                cmdInsert.ExecuteNonQuery();

                tran.Commit();

                lblMessage.ForeColor = System.Drawing.Color.Green;
                lblMessage.Text = "Scrap Note submitted successfully.<br/>" +
                                  "Total Scrap Value (INR): " + totalValueINR.ToString("N2") + "<br/>" +
                                  "Total Scrap Value (EUR): " + totalValueEUR.ToString("N2") + "<br/>" +
                                  "Next Step: " + nextStatusText;

                bindGrid();
            }
        }
        catch (Exception ex)
        {
            if (tran != null)
                tran.Rollback();

            lblMessage.ForeColor = System.Drawing.Color.Red;
            lblMessage.Text = "Error while submitting Scrap Note: " + ex.Message;
        }
    }

    protected void grd_RowCommand(object sender, GridViewCommandEventArgs e)
    {
        if (e.CommandName == "View")
        {
            string sid = e.CommandArgument.ToString();
            Response.Redirect("viewScrapNote.aspx?sid=" + sid);
        }
    }
}